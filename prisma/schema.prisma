// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String    @unique
  hashedPassword String
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  pageInfo       PageInfo?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Settings {
  id               String  @id @default(uuid())
  role             String  @unique
  signInCoverImage String?
  signUpCoverImage String?
}

model PageInfo {
  id        String   @id @default(uuid())
  User      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  banner    Banner[]
  theme     Theme    @default(LIGHT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Banner {
  id          String   @id @default(uuid())
  pageInfo    PageInfo @relation(fields: [pageInfoId], references: [id])
  pageInfoId  String
  order       Int
  imageUrl    String   @default("")
  description String   @default("")
  imageSrc    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Theme {
  LIGHT
  DARK
  SYSTEM
}
